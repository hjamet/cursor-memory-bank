#!/bin/bash

# Pre-commit hook to check for files exceeding a line limit.

MAX_LINES=500
# Code file extensions to check (lowercase)
CODE_EXTENSIONS=("py" "js" "ts" "java" "go" "rb" "php" "sh")

# Get list of staged files (Added, Copied, Modified)
# Exclude deleted files from the line count check
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    exit 0 # No staged files to check
fi

oversized_files=()

echo "Checking line counts for staged files..."

while IFS= read -r file; do
    # Check if the file exists (it might be staged for deletion)
    if [ ! -f "$file" ]; then
        continue
    fi

    # Get file extension in lowercase
    extension="${file##*.}"
    extension_lower=$(echo "$extension" | tr '[:upper:]' '[:lower:]')

    # Check if the extension is in our list
    is_code_file=0
    for ext in "${CODE_EXTENSIONS[@]}"; do
        if [[ "$extension_lower" == "$ext" ]]; then
            is_code_file=1
            break
        fi
    done

    if [[ "$is_code_file" -eq 1 ]]; then
        # Count lines using wc -l
        line_count=$(wc -l < "$file")

        # Trim leading/trailing whitespace from line_count
        line_count=$(echo "$line_count" | tr -d '[:space:]')

        echo " - Checking $file ($line_count lines)"

        if [[ "$line_count" -gt "$MAX_LINES" ]]; then
            oversized_files+=("$file")
        fi
    fi
done <<< "$STAGED_FILES"

if [ ${#oversized_files[@]} -gt 0 ]; then
    # Print warning to STDOUT but allow commit
    echo "" >&1 # Redirect to stdout explicitly for clarity if needed, though default
    echo "---------------------------------------------------------------------" >&1
    echo "WARNING: Files exceed maximum line count ($MAX_LINES)." >&1
    echo "The following files are too long and should ideally be refactored:" >&1
    echo "" >&1
    # Print list to stdout
    printf "  %s\n" "${oversized_files[@]}" >&1
    echo "---------------------------------------------------------------------" >&1
    # Exit 0 to allow the commit despite the warning
    exit 0 
else
    echo "All checked files are within the line limit."
    exit 0
fi 
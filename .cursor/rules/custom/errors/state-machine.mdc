---
description: [state-machine] - Erreurs courantes et bonnes pratiques pour les machines à états
globs: .cursor/rules/*.mdc
alwaysApply: false
---
# Machine à états Cursor

## Transition sans état préalable
- ❌ `context-update` : Si test amélioré
- ✅ `context-update` : Si test amélioré OU première exécution

## Détection de cycles
- ❌ Enchaînement sans vérification: rule1 -> rule2 -> rule1
- ✅ Compteur d'itérations: max 2 cycles identiques

# Erreurs courantes avec les Machines à États

## Problème: Conditions de transition incomplètes
- ❌ **Incorrect**: Définir des conditions de transition qui ne couvrent pas tous les cas possibles ou qui supposent un état préalable spécifique.
  ```
  ## Next Rules
  - `context-update` : Si au moins un test s'est amélioré
  - `fix` : Si aucun test ne s'est amélioré
  ```
- ✅ **Correct**: Inclure des conditions pour la première exécution et tous les cas possibles.
  ```
  ## Next Rules
  - `context-update` : Si au moins un test s'est amélioré OU si c'est la première exécution et que tous les tests sont documentés
  - `fix` : Si aucun test ne s'est amélioré ET ce n'est pas la première exécution OU si des tests échouent
  ```
- 📝 **Explication**: Une machine à états doit gérer tous les cas possibles, y compris la première exécution où aucun état préalable n'existe.

## Problème: Boucles infinies dans le workflow
- ❌ **Incorrect**: Créer des cycles dans le workflow sans condition de sortie claire.
  ```
  context-update -> implementation -> tests -> context-update
  ```
- ✅ **Correct**: Ajouter des conditions de sortie explicites ou un compteur d'itérations.
  ```
  context-update [si toutes les tâches sont terminées -> FIN]
               -> implementation -> tests -> context-update
  ```
- 📝 **Explication**: Tout workflow cyclique doit avoir une condition de sortie claire ou un mécanisme pour détecter les boucles infinies.

## Problème: Absence de critères de finalisation
- ❌ **Incorrect**: Ne pas définir clairement quand le workflow est considéré comme terminé.
  ```
  4. Si toutes les tâches sont terminées et tous les tests passent:
     - Présenter une synthèse du travail effectué
  ```
- ✅ **Correct**: Définir précisément les critères de finalisation et les actions à entreprendre.
  ```
  4. Si toutes les tâches sont terminées (c'est-à-dire qu'il n'y a plus de tâches dans "In Progress" ou "ToDo") ET que tous les tests passent (tous marqués ✅):
     - Présenter une synthèse du travail effectué
     - Indiquer clairement que le workflow est terminé
     - Ne pas appeler de règle suivante
  ```
- 📝 **Explication**: La finalisation d'un workflow doit être explicitement définie avec des critères précis pour éviter l'ambiguïté. 
---
alwaysApply: false
description: V√©rification syst√©matique de la racine du repository pour identifier les fichiers inappropri√©s
---

# √âtape 01 : V√©rification Racine du Repository üîç

## ‚ö†Ô∏è SYST√àME √Ä √âTATS - RAPPEL OBLIGATOIRE

Vous √™tes actuellement dans une **machine √† √©tats stricte** pour le nettoyage du repository :

### R√®gles de fonctionnement
- ‚úÖ **UNIQUEMENT** effectuer les actions d√©crites dans cette r√®gle
- ‚ùå **INTERDICTION ABSOLUE** de faire autre chose (m√™me si √ßa semble utile)
- ‚ùå **NE RIEN CASSER** : pr√©server fonctionnalit√© existante
- ‚úÖ **OBLIGATION** d'invoquer la r√®gle suivante en fin d'√©tape avec l'outil `fetch_rules`

### Machine √† √©tats
Cette √©tape fait partie d'un processus en 6 √©tapes :
`00-start ‚Üí 01-root-check ‚Üí 02-select-folder ‚Üí 03-explore-folder ‚Üí 04-clean-files ‚ü≤ ‚Üí 05-update-docs`

**Votre √©tape actuelle** : 01-root-check - V√©rification racine du repository

---

## Objectif de l'√âtape 01

**Identifier et nettoyer les fichiers qui n'ont pas leur place √† la racine du repository** pour maintenir une structure propre et organis√©e.

### Actions Obligatoires √† Effectuer

1. **Lister tous les fichiers √† la racine** :
   - Utiliser `list_dir` pour obtenir la liste compl√®te des fichiers/dossiers racine
   - Identifier chaque √©l√©ment pr√©sent

2. **Cat√©goriser les fichiers selon leur l√©gitimit√©** :
   - ‚úÖ **Fichiers l√©gitimes** : README.md, package.json, install.sh, .gitignore, etc.
   - ‚ùå **Fichiers inappropri√©s** : logs, scripts temporaires, documentation longue, fichiers de cache

3. **Identifier les fichiers √† nettoyer** :
   - Fichiers de logs : `*.log`, `*.tmp`, `*.temp`
   - Fichiers de cache : `*.cache`, `__pycache__/`, `.DS_Store`
   - Documentation longue : fichiers `.md` autres que README.md
   - Scripts temporaires : fichiers de test, scripts jetables

4. **Nettoyer les fichiers inappropri√©s** :
   - Supprimer les fichiers temporaires apr√®s v√©rification
   - D√©placer la documentation longue vers `documentation/`
   - Nettoyer les fichiers de cache

### Types de Fichiers √† Nettoyer

#### Fichiers Temporaires et Cache
- **Extensions** : `.tmp`, `.temp`, `.cache`, `.log`, `.bak`, `.swp`, `.pyc`
- **Dossiers** : `__pycache__/`, `.DS_Store`, `.vscode/`, `.idea/`
- **Action** : Suppression imm√©diate apr√®s v√©rification qu'ils ne sont pas utilis√©s

#### Documentation Inappropri√©e
- **Fichiers** : `*.md` autres que `README.md`
- **Action** : D√©placer vers `documentation/` avec nom appropri√©

#### Scripts Temporaires
- **Patterns** : `test_*.py`, `temp_*.sh`, `debug_*.js`
- **Action** : Supprimer si vraiment temporaires, sinon d√©placer vers `scripts/`

### Sortie Attendue

√Ä la fin de cette √©tape, vous devez fournir :
- **Liste des fichiers** pr√©sents √† la racine (avant nettoyage)
- **Fichiers identifi√©s** comme inappropri√©s
- **Actions effectu√©es** : suppressions, d√©placements, nettoyages
- **√âtat final** de la racine apr√®s nettoyage

### Exemple de Sortie

```
Fichiers √† la racine identifi√©s :
- README.md ‚úÖ (l√©gitime)
- package.json ‚úÖ (l√©gitime)
- install.sh ‚úÖ (l√©gitime)
- debug.log ‚ùå (√† supprimer)
- temp_script.py ‚ùå (√† supprimer)
- architecture.md ‚ùå (√† d√©placer vers documentation/)

Actions effectu√©es :
- Supprim√© : debug.log, temp_script.py
- D√©plac√© : architecture.md ‚Üí documentation/architecture.md

√âtat final : Racine propre avec uniquement les fichiers l√©gitimes
```

### R√®gles de S√©curit√©

1. **Principe Fail-Fast** : si un fichier semble important, s'arr√™ter et demander confirmation
2. **Jamais de suppression aveugle** : toujours v√©rifier l'utilisation avant suppression
3. **Conserver l'int√©grit√©** : pr√©server le contenu fonctionnel existant
4. **Documenter les actions** : noter chaque suppression/d√©placement

---

## Transitions Possibles

**Toujours vers** : `02-select-folder` - S√©lection du dossier √† traiter via la table des mati√®res

**Action requise** : Une fois la racine nettoy√©e et document√©e, invoquer `fetch_rules` avec le nom `02-select-folder` pour passer √† la s√©lection du dossier √† traiter.
---
alwaysApply: false
description: Point d'entrée de la machine à états de nettoyage et d'organisation du repository
---

# Machine à États Janitor - Point d'Entrée 🧹

## Principe Fondamental : Nettoyage Systématique et Organisation

Cette règle initie un **système à états strict** pour le nettoyage et l'organisation du repository : **maintenir la propreté, structurer la documentation et assurer la connectivité des docs sans rien casser**. L'objectif est de traiter UN SEUL dossier par exécution avec un processus méthodologique rigoureux.

**Philosophie** : Un repository propre est un repository maintenable. Mieux vaut traiter un dossier complètement que plusieurs superficiellement.

## ⛔🚫❌ INTERDICTION ABSOLUE DE CASSER ❌🚫⛔

**RÈGLE CRITIQUE** : Cette machine à états doit UNIQUEMENT nettoyer et organiser. **TOUTE tentative de modification qui pourrait casser le fonctionnement interrompt immédiatement le cycle.**

### Interdictions strictes :
- 🚫 **Ne jamais supprimer** sans vérification préalable
- 🚫 **Ne jamais modifier** du code fonctionnel sans nécessité
- 🚫 **Ne jamais casser** des liens existants dans la documentation
- ❌ **Arrêt immédiat** si l'agent risque de compromettre la fonctionnalité

**Rappel constant** : Cette machine à états **NETTOIE**, ne casse pas. Préserver l'intégrité fonctionnelle est primordial.

## Vue d'Ensemble du Processus en 6 Étapes

Cette machine à états fonctionne selon un processus méthodologique en 6 étapes interconnectées :

```
00-start (cette règle)
  ↓
01-root-check       # Vérification racine du repository
  ↓
02-select-folder    # Sélection du dossier à traiter
  ↓
03-explore-folder   # Exploration structure du dossier
  ↓
04-clean-files      # Nettoyage fichiers (boucle sous-dossiers)
  ↓ (loop interne)
  ├→ 04-clean-files (si sous-dossiers restants)
  └→ 05-update-docs (si tous sous-dossiers traités)
  ↓
05-update-docs      # Mise à jour documentation
```

## ⚠️ Règles de la Machine à États

### Règles de fonctionnement obligatoires :
- ✅ **UNIQUEMENT** effectuer les actions décrites dans la règle actuelle
- ❌ **INTERDICTION ABSOLUE** de faire autre chose (même si ça semble utile)
- ❌ **NE RIEN CASSER** : préserver fonctionnalité existante
- ✅ **OBLIGATION** d'invoquer la règle suivante en fin d'étape avec l'outil `fetch_rules`

### Comment utiliser cette machine à états :

1. **Déclencher** : L'utilisateur demande d'utiliser cette règle pour nettoyer le repository
2. **Suivre** : L'agent suit automatiquement le processus en suivant les règles dans l'ordre
3. **Traiter** : UN SEUL dossier par exécution, mais TOUS ses sous-dossiers
4. **Valider** : Vérifier que le repo est plus propre après le nettoyage

## Caractéristiques Clés de l'Architecture

### 1. **Machine à États Stricte**
- **INTERDICTION ABSOLUE** de mélanger ou sauter des étapes
- **OBLIGATION** de marquer explicitement le titre de l'étape actuelle
- **Chaque étape** a un objectif précis et ne peut pas être contournée

### 2. **Transitions Explicites**
- L'agent DOIT invoquer la règle suivante avec `fetch_rules`
- Chaque règle indique clairement quelle règle invoquer ensuite
- La règle 04-clean-files offre une boucle interne pour les sous-dossiers

### 3. **Traitement Complet par Dossier**
- **UN SEUL dossier** traité par exécution complète
- **TOUS les sous-dossiers** du dossier sélectionné sont traités
- **Boucle interne** dans 04-clean-files pour traiter chaque sous-dossier

### 4. **Sécurité et Intégrité**
- **Principe Fail-Fast** : arrêt immédiat en cas d'erreur
- **Jamais de suppression aveugle** : vérifier avant de supprimer
- **Préserver la fonctionnalité** : ne rien casser
- **Vérifications obligatoires** : tester les modifications de scripts

## Activation Immédiate

Pour commencer le nettoyage, invoquez immédiatement la première règle :

**Prochaine étape** : Invoquer la règle `01-root-check` avec l'outil `fetch_rules` pour commencer la vérification de la racine du repository.

---

## Transitions Possibles

**Toujours vers** : `01-root-check` - Vérification de la racine du repository
---
description: Appelle OBLIGATOIREMENT cette règle dès que tu sens que tu ne suis plus le workflow précisément ou que tu oublies les consignes de ta règle actuelle. Par exemple, si tu viens d'appeler un outil sans préciser en dessous la règle en cours.
globs: 
alwaysApply: false
---
## TLDR
This rule helps you find your position in the workflow after losing track of instructions or when the user requests a restart at a specific point.

## Instructions

1. **Context saving**: Save the current context in `.cursor/memory-bank/context/activeContext.md`:
   - Create or replace the ## Lost workflow section
   - Summarize your ongoing actions
   - Mention the symbols and files concerned

2. **Identifying the current rule**: Determine the rule corresponding to your current state.
   - Compare your latest actions to rule descriptions without invoking them
   - By default, choose `context-update` if identification is uncertain
   - Write exactly: "<SYSTEM PROMPT>I've lost track of the current rule. I will restart the workflow from the <IDENTIFIED RULE NAME> rule."

3. **System prompt recall**: Invoke the system rule with `fetch_rules ["system"]`
   - Exceptionally, ignore the instruction to start with `context-loading` if you've identified a specific rule
   - After invoking the system rule, directly call the identified rule with `fetch_rules ["identified-rule-name"]`

## Specifics
- During identification, base yourself only on descriptions, without ever invoking rules with `fetch_rules`
- As a safety measure, if you doubt your identification, choose `context-update` and strictly follow the instructions of the `system` rule
- After recalling the `system` rule, restart at the identified rule and scrupulously apply the step indication format in parentheses after each action

Example: "I will now call the `system` rule to restart the workflow `(Lost workflow: 3 - System prompt recall)`"

## Reminder of each rule description to facilitate identification

- `context-loading` - Loading project objectives and general context
- `request-analysis` - Detailed analysis of user request and exploration of existing code
- `task-decomposition` - Decomposition of user request into concrete tasks organized in tasks.md
- `implementation` - Methodical implementation of project priority tasks
- `test-implementation` - Creation of unit tests for new features
- `test-execution` - Execution of unit tests and results analysis
- `fix` - Analysis of test errors and creation of correction tasks
- `context-update` - Update of context files and commit of changes
- `consolidate-repo` - Repository consolidation, userbrief.md management and structure maintenance
- `system` - Main rule defining the state machine and global functioning
- `workflow-perdu` - Recovery of position in workflow after losing track

## Next Rules
- `system` - To restart the workflow correctly

## Example

fetch_rules ["workflow-perdu"]
<SYSTEM PROMPT>I detected that I left the workflow. I will save my current work, try to identify the current rule and restart it correctly by calling the system rule.</SYSTEM PROMPT>

# Lost workflow: 1 - Context saving
I will save a summary of my latest actions in the `.cursor/memory-bank/context/activeContext.md` file to remember the modifications I made outside the workflow. `(Lost workflow: 1 - Context saving)`
[...modifications to activeContext.md file...]
`(Lost workflow: 1 - Context saving)`

# Lost workflow: 2 - Identifying the current rule
Based on my latest actions, I think the `tests` rule best corresponds to my current state. However, my work is too disorganized to be sure. I will therefore take the safety solution and call the `context-loading` rule to remind myself of the project context. `(Lost workflow: 2 - Identifying the current rule)`
<SYSTEM PROMPT>I've lost track of the current rule. I will restart the workflow from the context-loading rule.</SYSTEM PROMPT>

# Lost workflow: 3 - System prompt recall
I will now properly restart the workflow by calling the system rule. `(Lost workflow: 3 - System prompt recall)`

fetch_rules ["system"]

# Start Rule

To start this rule, recite word for word this phrase: "<SYSTEM PROMPT>I detected that I left the workflow. I will save my current work, identify the current rule and restart it correctly by calling the system rule.</SYSTEM PROMPT>"

---
description: Appelle OBLIGATOIREMENT cette règle dès que tu sens que tu ne suis plus le workflow précisément ou que tu oublies les consignes de ta règle actuelle. Par exemple, si tu viens d'appeler un outil sans préciser en dessous la règle en cours.
globs: 
alwaysApply: false
---

## TLDR  
Cette règle permet de retrouver ta position dans le workflow après avoir perdu le fil des instructions ou lorsque l'utilisateur demande un redémarrage à un point précis.  

## Instructions  

1. **Sauvegarde du contexte** : Sauvegarde le contexte actuel dans `.cursor/memory-bank/context/activeContext.md` :  
   - Crée ou remplace la section ## Workflow perdu  
   - Résume tes actions en cours  
   - Mentionne les symboles et fichiers concernés  

2. **Identification de la règle en cours** : Détermine la règle correspondant à ton état actuel.  
   - Compare tes dernières actions aux descriptions des règles sans les invoquer  
   - Par défaut, choisis `context-update` si l'identification est incertaine  
   - Écris exactement : "<SYSTEM PROMPT>J'ai perdu le fil de la règle en cours. Je vais redémarrer le workflow depuis la règle <NOM DE LA RÈGLE IDENTIFIÉE>."  

3. **Rappel du system prompt** : Invoque la règle système avec `fetch_rules ["system"]`  
   - Exceptionnellement, ignore l'instruction de démarrer par `context-loading` si tu as identifié une règle spécifique  
   - Après avoir invoqué la règle système, appelle directement la règle identifiée avec `fetch_rules ["nom-de-la-règle-identifiée"]`  

## Précisions  
- Pendant l'identification, base-toi uniquement sur les descriptions, sans jamais invoquer les règles avec `fetch_rules`  
- Par mesure de sécurité, si tu doutes de ton identification, choisis `context-update` et suis strictement les instructions de la règle `system`  
- Après avoir rappelé la règle `system`, redémarre à la règle identifiée et applique scrupuleusement le format d'indication d'étape entre parenthèses après chaque action  

Exemple : "Je vais maintenant appeler la règle `system` pour redémarrer le workflow `(Workflow perdu : 3 - Rappel du system prompt)`"  

## Rappel de la description de chaque règle pour faciliter l'identification  

- `context-loading` - Chargement des objectifs et du contexte général du projet  
- `context-update` - Mise à jour des fichiers de contexte et commit des changements  
- `fix` - Implémentation des corrections nécessaires aux problèmes identifiés par les tests  
- `implementation` - Avancement sur les tâches en implémentant les nouvelles fonctionnalités  
- `request-analysis` - Analyse détaillée de la requête utilisateur par rapport aux objectifs  
- `test-implementation` - Création des tests unitaires pour les nouvelles fonctionnalités  
- `test-execution` - Exécution des tests unitaires et analyse des résultats  
- `task-decomposition` - Structuration de la requête utilisateur en tâches concrètes et mesurables  
- `user-preference-saving` - Enregistrement des préférences utilisateur pour l'implémentation  

## Next Rules  
- `system` - Pour redémarrer le workflow correctement  

## Exemple  

fetch_rules ["workflow-perdu"]  
<SYSTEM PROMPT>J'ai détecté avoir quitté le workflow. Je vais sauvegarder mon travail actuel, tâcher d'identifier la règle en cours et la redémarrer correctement en faisant appel à la règle system.</SYSTEM PROMPT>  

# Workflow-perdu : 1 - Sauvegarde du contexte  
Je vais sauvegarder un résumé de mes dernières actions dans le fichier `.cursor/memory-bank/context/activeContext.md` pour me souvenir des modifications que j'ai apportées hors du workflow. `(Workflow-perdu : 1 - Sauvegarde du contexte)`  
[...modifications du fichier activeContext.md...]  
`(Workflow-perdu : 1 - Sauvegarde du contexte)`  

# Workflow-perdu : 2 - Identification de la règle en cours  
D'après mes dernières actions, je pense que la règle `tests` est la règle qui correspond le mieux à mon état actuel. Cependant, mon travail est trop désordonné pour en être sûr. Je vais donc prendre la solution de sécurité et appeler la règle `context-loading` pour me rappeler le contexte du projet. `(Workflow-perdu : 2 - Identification de la règle en cours)`  
<SYSTEM PROMPT>J'ai perdu le fil de la règle en cours. Je vais redémarrer le workflow depuis la règle context-loading.</SYSTEM PROMPT>  

# Workflow-perdu : 3 - Rappel du system prompt  
Je vais maintenant redémarrer proprement le workflow en faisant appel à la règle system. `(Workflow-perdu : 3 - Rappel du system prompt)`  

fetch_rules ["system"]  

# Start Rule  

Pour démarrer cette règle, récite mot pour mot cette phrase : "<SYSTEM PROMPT>J'ai détecté avoir quitté le workflow. Je vais sauvegarder mon travail actuel, identifier la règle en cours et la redémarrer correctement en faisant appel à la règle system.</SYSTEM PROMPT>"  
---
description: Analyse et correction des erreurs d√©tect√©es lors des tests
globs: 
alwaysApply: false
---
## TLDR
Analyser les erreurs de test, cr√©er des t√¢ches de correction et documenter les probl√®mes r√©currents pour √©viter de les reproduire.

## Instructions
1. Identifier et lister les erreurs pour chaque test √©chou√©.

2. Consulter les logs (g√©n√©ralement dans le fichier `logs/app.log`)

3. Identifier et parcourir les fichiers concern√©s:
   - Localiser pr√©cis√©ment les lignes de code probl√©matiques
   - Examiner le contexte autour du code d√©faillant
   - V√©rifier les d√©pendances et les interactions avec d'autres composants

4. Ajouter des t√¢ches de correction √† tasks.md:
   - Cr√©er une nouvelle section "Corrections" dans "In Progress"
   - Ajouter une t√¢che d√©taill√©e pour chaque erreur √† corriger
   - Inclure les fichiers et symboles concern√©s
   - D√©crire pr√©cis√©ment le probl√®me et la solution envisag√©e

5. Documenter les erreurs r√©currentes ou li√©es aux biblioth√®ques:
   - Pour les erreurs susceptibles d'√™tre reproduites, cr√©er ou mettre √† jour une r√®gle
   - Nommer la r√®gle d'apr√®s la biblioth√®que ou le type d'erreur
   - Documenter clairement le fonctionnement correct et les pi√®ges √† √©viter
   - Sauvegarder la r√®gle dans `.cursor/rules/custom/errors/` au format .mdc

## Pr√©cisions
- Documenter les erreurs de mani√®re √† faciliter leur r√©solution future
- Inclure les symboles et fichiers concern√©s dans les t√¢ches de r√©solution
- Inclure des exemples concrets dans les r√®gles d'erreur
- Organiser les t√¢ches de correction par composant ou fonctionnalit√©
- Garder les r√®gles d'erreur concises mais compl√®tes : va au plus simple et clair.
- Utilise du logging pendant tes tests : Si tu es en python, utilise `src/utils/logger.py` pour enregistrer les logs dans `logs/app.log`

## Format pour les r√®gles d'erreur (.mdc)
```
---
description: description (Description consise des conditions d'application de l'erreur)
globs: *.py, *.ts (Pattern glob pour les fichiers concern√©s. Laisser vide pour utiliser la description)
alwaysApply: false
---
# Erreurs courantes avec [Nom de la biblioth√®que]

## Probl√®me: [Description du probl√®me]
- ‚ùå **Incorrect**: [Exemple de code incorrect]
- ‚úÖ **Correct**: [Exemple de code correct]
- üìù **Explication**: [Explication claire du fonctionnement correct]

## Probl√®me: [Description d'un autre probl√®me]
- ‚ùå **Incorrect**: [Exemple de code incorrect]
- ‚úÖ **Correct**: [Exemple de code correct]
- üìù **Explication**: [Explication claire du fonctionnement correct]
```

## Next Rules
- `implementation` - Pour impl√©menter les corrections identifi√©es

## Exemple

fetch_rules ["fix"]
<SYSTEM PROMPT>Je vais analyser m√©thodiquement les erreurs des tests √©chou√©s, cr√©er des t√¢ches de correction bien d√©finies et documenter les probl√®mes r√©currents. Je ne corrigerai pas directement les erreurs mais je pr√©parerai les t√¢ches pour l'impl√©mentation future. Je passerai ensuite √† l'impl√©mentation des corrections.</SYSTEM PROMPT>

# Fix : 1 - Identification des erreurs
Je commence par analyser les erreurs de test pour comprendre les probl√®mes.
[...analyse des erreurs...]

# Fix : 2 - Consultation des logs
Je consulte les logs pour obtenir plus de d√©tails sur les erreurs.
[...consultation des logs...]

# Fix : 3 - Analyse des fichiers
Je parcours les fichiers concern√©s pour localiser les probl√®mes.
[...analyse des fichiers...]

# Fix : 4 - Ajout des t√¢ches de correction
Je cr√©e des t√¢ches d√©taill√©es pour corriger chaque erreur.
[...cr√©ation des t√¢ches...]

# Fix : 5 - Documentation des erreurs
Je documente les erreurs r√©currentes pour √©viter de les reproduire.
[...documentation des erreurs...]

# Fix : 6 - Appel de la r√®gle suivante
Je dois maintenant appeler la r√®gle implementation pour corriger les erreurs.
La r√®gle implementation doit √™tre appel√©e pour impl√©menter les corrections.

fetch_rules ["implementation"]

# Start Rule

Pour d√©marrer cette r√®gle, r√©cite mot pour mot cette phrase : "<SYSTEM PROMPT>Je vais analyser m√©thodiquement les erreurs des tests √©chou√©s, cr√©er des t√¢ches de correction bien d√©finies et documenter les probl√®mes r√©currents. Je ne corrigerai pas directement les erreurs mais je pr√©parerai les t√¢ches pour l'impl√©mentation future. Je passerai ensuite √† l'impl√©mentation des corrections.</SYSTEM PROMPT>"

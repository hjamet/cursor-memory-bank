---
description: 
globs: .cursor/memory-bank/context/techContext.md
alwaysApply: false
---

# Technical Environment

## Development Platform
- **Operating System**: [Windows/Linux/macOS]
- **Version**: [Specific version if relevant]
- **Architecture**: [x64/ARM/etc.]

## Console/Shell
- **Terminal used**: [Git Bash/CMD/PowerShell/Bash/Zsh/etc.]
- **Specific configurations**: [Aliases, plugins, customizations]

## Installation and Dependency Management
- **Package manager**: [pip/poetry/npm/yarn/etc.]
- **Environment type**: [virtual/global/containerized]
- **Configuration files**: [requirements.txt/pyproject.toml/package.json/etc.]
- **Key tools version**: [Python 3.x/Node.js x.y.z/etc.]

## Technology Stack
- **Languages**: [Python/JavaScript/TypeScript/etc.]
- **Main frameworks**: [Django/Flask/React/Vue/etc.]
- **Essential libraries**: [List of main libraries with versions]
- **Build/packaging tools**: [Webpack/Vite/setuptools/etc.]

## Code Conventions
- **Formatting style**: [PEP8/Prettier/ESLint/etc.]
- **Linting tools**: [Flake8/Pylint/ESLint/etc.]
- **Automatic formatting**: [Black/Prettier/etc.]
- **Naming conventions**: [snake_case/camelCase/etc.]
- **Project structure**: [Description of folder organization]

## Server Architecture and Deployment
- **Database**: [PostgreSQL/MySQL/MongoDB/etc.]
  - Version: [x.y.z]
  - Schema: [Brief description of the data model]
- **Exposed services**: [REST API/GraphQL/etc.]
- **Deployment infrastructure**: [Docker/K8s/VM/etc.]
- **Environments**: [Dev/Staging/Prod, with specificities]

## Testing and Quality
- **Testing framework**: [pytest/Jest/etc.]
- **Code coverage**: [Coverage target, tools used]
- **CI/CD**: [GitHub Actions/Jenkins/etc.]

## Known Issues and Solutions
- **Notes on specific library behaviors**
- **Documented workarounds for recurring bugs**
- **Documented API changes that have caused problems**

---
Note: This file must be kept up to date with all relevant technical information regarding the project's development environment.
